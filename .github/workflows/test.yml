name: Card Service Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    name: 🧪 PHPUnit Tests
    runs-on: ubuntu-latest

    env:
      POSTGRES_DB: ${{ secrets.DB }}
      POSTGRES_USER: ${{ secrets.DB_USER }}
      POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}

    steps:
      - name: ⬇️ Checkout repository
        uses: actions/checkout@v3

      - name: 💾 Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: |
            vendor
            ~/.composer/cache
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: 🐳 Start Docker Compose
        run: docker compose up -d

      - name: ⏱ Wait for database to be ready
        run: |
          echo "⏳ Waiting for database to accept connections..."
          sleep 10

      - name: ✅ Trust /var/www as safe Git directory
        run: docker exec --user root cart-service git config --system --add safe.directory /var/www

      - name: 🔧 Fix Laravel directory permissions
        run: |
          docker exec --user root cart-service bash -c "
            mkdir -p /var/www/vendor /var/www/storage/logs /var/www/bootstrap/cache && \
            chown -R 1000:1000 /var/www/vendor /var/www/storage /var/www/bootstrap/cache
          "

      - name: 📦 Install PHP dependencies
        run: docker exec cart-service composer install --no-interaction --prefer-dist

      - name: ⚙️ Set up Laravel
        run: |
          docker exec --user root cart-service php artisan config:clear
          docker exec --user root cart-service php artisan key:generate --env=testing
          docker exec --user root cart-service php artisan migrate --env=testing --force

      - name: 🧪 Run tests with coverage and JUnit
        run: |
          docker exec --user root -e XDEBUG_MODE=coverage cart-service composer coverage

      - name: 📁 Copy test and coverage reports from container
        run: |
          docker cp cart-service:/var/www/junit.xml ./phpunit.junit.xml
          docker cp cart-service:/var/www/coverage.xml ./coverage.xml

      - name: 📤 Upload JUnit test report
        uses: actions/upload-artifact@v4
        with:
          name: junit-report
          path: phpunit.junit.xml

      - name: 🧾 Pretty test results
        if: github.event_name == 'push' || github.event_name == 'pull_request'
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          files: phpunit.junit.xml

      - name: ☁️ Upload coverage report to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage.xml
          fail_ci_if_error: true

      - name: 🧹 Shut down environment
        if: always()
        run: docker compose down -v
